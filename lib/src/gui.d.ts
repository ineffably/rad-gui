import ToggleControl from './controls/toggle-control';
import ColorControl from './controls/color-control';
import FunctionControl from './controls/function-control';
import NumberControl from './controls/number-control';
import OptionControl from './controls/option-control';
import TextControl from './controls/text-control';
import './rad-gui.css';
export declare class GUI {
    parent: GUI;
    autoPlace: boolean;
    width: any;
    closeFolders: boolean;
    injectStyles: boolean;
    touchStyles: boolean;
    root: any;
    children: any[];
    controllers: any[];
    folders: any[];
    domElement: HTMLDivElement;
    $title: HTMLButtonElement;
    $children: HTMLDivElement;
    container: HTMLDivElement;
    _closed: boolean;
    _hidden: boolean;
    _onChange: any;
    _onFinishChange: any;
    _onOpenClose: any;
    _title: string;
    _closeFolders: boolean;
    _onFinishChangeCallback: any;
    _onChangeCallback: any;
    _onOpenCloseCallback: any;
    constructor({ parent, autoPlace, container, width, title, closeFolders, injectStyles, touchStyles }?: any);
    add(object: any, property: any, $1: any, max: any, step: any): OptionControl | NumberControl | ToggleControl | TextControl | FunctionControl;
    addColor(object: any, property: any, rgbScale?: number): ColorControl;
    addFolder(title: any): GUI;
    load(obj: any, recursive?: boolean): this;
    remember(...args: any[]): void;
    save(recursive?: boolean): {
        controllers: {};
        folders: {};
    };
    open(open?: boolean): this;
    close(): this;
    _setClosed(closed: any): void;
    show(show?: boolean): this;
    hide(): this;
    openAnimated(open?: boolean): this;
    title(title: any): this;
    reset(recursive?: boolean): this;
    onChange(callback: any): this;
    _callOnChange(controller: any): void;
    onFinishChange(callback: any): this;
    _callOnFinishChange(controller: any): void;
    onOpenClose(callback: any): this;
    _callOnOpenClose(changedGUI: any): void;
    destroy(): void;
    controllersRecursive(): any[];
    foldersRecursive(): any[];
}
