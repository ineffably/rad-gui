import{G as h}from"./index-CAGXO9Yg.js";class l{constructor(){this.animationId=null,this.demoObject={boxSize:100,rotation:0,opacity:1,animationSpeed:1,enableAnimation:!1,showShadow:!0,autoRotate:!1,boxText:"Box",cssFilter:"none",backgroundColor:"#ff6b6b",borderColor:"rgb(255, 255, 255)",animationType:"bounce",boxShape:"square",resetBox:()=>this.resetBox(),randomizeColors:()=>this.randomizeColors(),saveSettings:()=>this.saveSettings(),loadSettings:()=>this.loadSettings()},this.box=document.getElementById("animated-box"),this.status=document.getElementById("status"),this.setupGUI(),this.updateBox(),this.startAnimation()}setupGUI(){this.gui=new h({title:"Demo Controls",width:300}),this.gui.add(this.demoObject,"boxSize",50,200,1).name("Box Size").onChange(()=>this.updateBox()).onFinishChange(t=>this.logChange("Box Size",t.value)),this.gui.add(this.demoObject,"rotation",0,360,1).name("Rotation (¬∞)").onChange(()=>this.updateBox()),this.gui.add(this.demoObject,"opacity",0,1,.01).name("Opacity").onChange(()=>this.updateBox()),this.gui.add(this.demoObject,"boxText").name("Text Content").onChange(()=>this.updateBox()),this.gui.add(this.demoObject,"enableAnimation").name("Enable Animation").onChange(t=>{t.value?this.startAnimation():this.stopAnimation(),this.logChange("Animation",t.value?"Started":"Stopped")}),this.gui.add(this.demoObject,"showShadow").name("Show Shadow").onChange(()=>this.updateBox()),this.gui.addColor(this.demoObject,"backgroundColor",1).name("Background Color").onChange(()=>this.updateBox()),this.gui.addColor(this.demoObject,"borderColor",1).name("Border Color").onChange(()=>this.updateBox()),this.gui.add(this.demoObject,"animationType",["bounce","pulse","shake","rotate"]).name("Animation Type").onChange(t=>this.logChange("Animation Type",t.value)),this.gui.add(this.demoObject,"boxShape",{Square:"square",Circle:"circle",Diamond:"diamond",Triangle:"triangle"}).name("Shape").onChange(()=>this.updateBox()),this.setupAnimationFolder(),this.setupAppearanceFolder(),this.setupActionsFolder(),this.gui.onChange(t=>{console.log("GUI Change Event:",t),this.logChange(`Global onChange: ${t.property}`,t.value)}),this.gui.onFinishChange(t=>{console.log("GUI Finish Change Event:",t),this.logChange(`Global onFinishChange: ${t.property}`,t.value)}),this.gui.onOpenClose(t=>{console.log("GUI Open/Close Event:",t);const o=!t._closed;this.logChange("Folder State",o?"Opened":"Closed")})}setupAnimationFolder(){this.animationFolder=this.gui.addFolder("Animation Settings"),this.animationFolder.add(this.demoObject,"animationSpeed",.1,3,.1).name("Speed Multiplier").onChange(()=>this.updateAnimation()),this.animationFolder.add(this.demoObject,"autoRotate").name("Auto Rotate").onChange(()=>this.updateAnimation()),this.animationFolder.close()}setupAppearanceFolder(){this.appearanceFolder=this.gui.addFolder("Advanced Appearance"),this.appearanceFolder.add(this.demoObject,"cssFilter",["none","blur(2px)","brightness(1.5)","contrast(1.5)","grayscale(1)","sepia(1)","hue-rotate(90deg)"]).name("CSS Filter").onChange(()=>this.updateBox())}setupActionsFolder(){this.actionsFolder=this.gui.addFolder("Actions"),this.actionsFolder.add(this.demoObject,"resetBox").name("Reset to Defaults"),this.actionsFolder.add(this.demoObject,"randomizeColors").name("Randomize Colors"),this.actionsFolder.add(this.demoObject,"saveSettings").name("Save Settings"),this.actionsFolder.add(this.demoObject,"loadSettings").name("Load Settings")}updateBox(){const{boxSize:t,rotation:o,opacity:e,boxText:i,backgroundColor:s,borderColor:a,showShadow:n,boxShape:r,cssFilter:d}=this.demoObject;switch(this.box.style.width=`${t}px`,this.box.style.height=`${t}px`,this.box.style.transform=`rotate(${o}deg)`,this.box.style.opacity=e.toString(),this.box.style.backgroundColor=s,this.box.style.borderColor=a,this.box.style.border=`2px solid ${a}`,this.box.style.filter=d,this.box.textContent=i,this.box.style.boxShadow=n?"0 4px 8px rgba(0,0,0,0.2)":"none",r){case"circle":this.box.style.borderRadius="50%";break;case"diamond":this.box.style.borderRadius="0",this.box.style.transform=`rotate(${o+45}deg)`;break;case"triangle":this.box.style.borderRadius="0",this.box.style.clipPath="polygon(50% 0%, 0% 100%, 100% 100%)";break;default:this.box.style.borderRadius="8px",this.box.style.clipPath="none"}}startAnimation(){if(this.animationId)return;let t=Date.now();const o=()=>{if(!this.demoObject.enableAnimation)return;const e=Date.now()-t,i=this.demoObject.animationSpeed;switch(this.demoObject.animationType){case"bounce":this.box.style.transform+=` translateY(${Math.sin(e*.005*i)*10}px)`;break;case"pulse":const s=1+Math.sin(e*.003*i)*.1;this.box.style.transform+=` scale(${s})`;break;case"shake":const a=Math.sin(e*.02*i)*2,n=Math.cos(e*.02*i)*2;this.box.style.transform+=` translate(${a}px, ${n}px)`;break;case"rotate":this.demoObject.rotation=(this.demoObject.rotation+i)%360;break}this.demoObject.autoRotate&&(this.demoObject.rotation=(this.demoObject.rotation+.5*i)%360),this.updateBox(),this.animationId=requestAnimationFrame(o)};this.animationId=requestAnimationFrame(o)}stopAnimation(){this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null)}updateAnimation(){this.demoObject.enableAnimation&&(this.stopAnimation(),this.startAnimation())}resetBox(){Object.assign(this.demoObject,{boxSize:100,rotation:0,opacity:1,animationSpeed:1,enableAnimation:!1,showShadow:!0,autoRotate:!1,boxText:"Box",cssFilter:"none",backgroundColor:"#ff6b6b",borderColor:"rgb(255, 255, 255)",animationType:"bounce",boxShape:"square"}),this.gui.controllersRecursive().forEach(t=>{t.updateDisplay()}),this.updateBox(),this.logChange("Settings","Reset to defaults")}randomizeColors(){const t=()=>{const o=Math.floor(Math.random()*256),e=Math.floor(Math.random()*256),i=Math.floor(Math.random()*256);return`rgb(${o}, ${e}, ${i})`};this.demoObject.backgroundColor=t(),this.demoObject.borderColor=t(),this.gui.controllersRecursive().forEach(o=>{(o.property==="backgroundColor"||o.property==="borderColor")&&o.updateDisplay()}),this.updateBox(),this.logChange("Colors","Randomized")}saveSettings(){const t=this.gui.save();localStorage.setItem("radGuiDemoSettings",JSON.stringify(t)),this.logChange("Settings","Saved to localStorage")}loadSettings(){const t=localStorage.getItem("radGuiDemoSettings");if(t)try{const o=JSON.parse(t);this.gui.load(o),this.updateBox(),this.logChange("Settings","Loaded from localStorage")}catch(o){this.logChange("Settings","Error loading from localStorage"),console.error("Error loading settings:",o)}else this.logChange("Settings","No saved settings found")}logChange(t,o){const e=new Date().toLocaleTimeString();this.status.textContent=`${e}: ${t} changed to ${o}`,console.log(`[${e}] ${t}:`,o)}}document.addEventListener("DOMContentLoaded",()=>{new l,console.log("üéõÔ∏è Rad GUI TypeScript Demo initialized!"),console.log("This demo showcases:"),console.log("‚Ä¢ Number controls with min/max/step"),console.log("‚Ä¢ Boolean toggle controls"),console.log("‚Ä¢ Text input controls"),console.log("‚Ä¢ Color picker controls"),console.log("‚Ä¢ Option controls (dropdowns)"),console.log("‚Ä¢ Function button controls"),console.log("‚Ä¢ Organized folders"),console.log("‚Ä¢ Event handling"),console.log("‚Ä¢ Save/load functionality"),console.log("‚Ä¢ Proper TypeScript typing")});
